# Specify server locations in a SOLR_LOCATOR variable; used later in   
# variable substitutions:  
SOLR_LOCATOR : {  
  # Name of solr collection  
  collection : collection1  
    
  # ZooKeeper ensemble  
  zkHost : "ip-172-31-5-171.ap-southeast-1.compute.internal:2181/solr"    
}  
  
# Specify an array of one or more morphlines, each of which defines an ETL   
# transformation chain. A morphline consists of one or more potentially   
# nested commands. A morphline is a way to consume records such as Flume events,   
# HDFS files or blocks, turn them into a stream of records, and pipe the stream   
# of records through a set of easily configurable transformations on its way to   
# Solr.  
morphlines : [  
  {  
    # Name used to identify a morphline. For example, used if there are multiple   
    # morphlines in a morphline config file.  
    id : morphline1   
      
    # Import all morphline commands in these java packages and their subpackages.  
    # Other commands that may be present on the classpath are not visible to this  
    # morphline.  
    importCommands : ["org.kitesdk.**", "org.apache.solr.**","com.cloudera.example.**"]  
      
    commands : [                      
      {  
        readJson {}  
      }  
      {   
        extractJsonPaths {  
          flatten : false  
          paths : {   
            id : /id              
            created_at : /created_at  
            text : /text        
            text_cn:/text_cn
          }  
        }  
      }  
  
{
        generateUUID {
            field:uuuid
        }
    }      
      # Consume the output record of the previous command and pipe another  
      # record downstream.  
      #  
      # convert timestamp field to native Solr timestamp format  
      # such as 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z  
      {  
        convertTimestamp {  
          field : created_at  
          inputFormats : ["yyyy-MM-dd'T'HH:mm:ss'Z'", "yyyy-MM-dd"]  
          inputTimezone : America/Los_Angeles  
          outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"                                   
          outputTimezone : UTC  
        }  
      }  
        
      # Consume the output record of the previous command and pipe another  
      # record downstream.  
      #  
      # This command deletes record fields that are unknown to Solr   
      # schema.xml.  
      #  
      # Recall that Solr throws an exception on any attempt to load a document   
      # that contains a field that is not specified in schema.xml.  
      {  
        sanitizeUnknownSolrFields {  
          # Location from which to fetch Solr schema  
          solrLocator : ${SOLR_LOCATOR}  
        }  
      }    
              
      # log the record at DEBUG level to SLF4J  
      { logDebug { format : "output record: {}", args : ["@{}"] } }      
        
      # load the record into a Solr server or MapReduce Reducer  
      {   
        loadSolr {  
          solrLocator : ${SOLR_LOCATOR}  
        }  
      }  
    ]  
  }  
]  

